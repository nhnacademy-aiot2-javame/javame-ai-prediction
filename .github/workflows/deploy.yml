name: AI Prediction Deployment

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup AI Prediction service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~
            mkdir -p ai-prediction
            cd ai-prediction

            # Dockerfile 작성
            echo 'FROM python:3.9-slim
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
CMD ["python", "batch_runner.py"]' > Dockerfile

            # requirements.txt 작성
            echo 'tensorflow==2.10.0
pandas==1.5.3
numpy==1.24.3
scikit-learn==1.2.2
matplotlib==3.7.1
seaborn==0.12.2
prophet==1.1.4
influxdb-client==1.36.1
mysql-connector-python==8.0.33
schedule==1.2.0
python-dotenv==1.0.0
pytest==7.3.1
pytest-cov==4.1.0' > requirements.txt

            # 파이썬 소스 복사
            cp -r ~/aiot2-team3/ai-prediction/* . || echo "No source files to copy"

            # 공통 docker-compose.yml에 AI 서비스 추가
            cd ~/docker
            if ! grep -q "ai-prediction:" docker-compose.yml; then
              cp docker-compose.yml docker-compose.yml.bak
              echo '  ai-prediction:
    build:
      context: ../ai-prediction
      dockerfile: Dockerfile
    container_name: javame-ai-prediction
    environment:
      - INFLUXDB_URL=http://localhost:10288
      - INFLUXDB_TOKEN=g-W7W0j9AE4coriQfnhHGMDnDhTZGok8bgY1NnZ6Z0EnTOsFY3SWAqDTC5fYlQ9mYnbK_doR074-a4Dgck2AOQ==
      - INFLUXDB_ORG=javame
      - INFLUXDB_BUCKET=aiot
      - PREDICTION_INTERVAL=6
    volumes:
      - ../ai-prediction:/app
    networks:
      - javame-network
    restart: unless-stopped
    depends_on:
      - influxdb' > ai-prediction-service.txt
              awk '/restart: unless-stopped$/{print; system("cat ai-prediction-service.txt"); next}1' docker-compose.yml > docker-compose.yml.new
              mv docker-compose.yml.new docker-compose.yml
              rm ai-prediction-service.txt
              echo "Added ai-prediction service to docker-compose.yml"
            else
              echo "ai-prediction service already exists in docker-compose.yml"
            fi

      - name: Deploy AI Prediction service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/docker
            docker-compose build ai-prediction
            docker-compose up -d ai-prediction

      - name: Verify deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ~/docker
            docker-compose ps | grep ai-prediction || echo "ai-prediction service not running"
            docker-compose logs --tail=50 ai-prediction || echo "Could not fetch logs"
